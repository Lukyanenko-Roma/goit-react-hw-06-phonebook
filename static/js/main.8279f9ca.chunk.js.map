{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/Container/Container.module.css","redux/phonebook/actions.js","redux/phonebook/reducers.js","redux/store.js","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","el","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","reducers","devTools","process","persistor","persistStore","Container","children","className","styles","container","Section","title","section","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","alert","reset","onSubmit","form","this","label","input","onChange","type","pattern","required","button","Component","connect","dispatch","action","target","filterLabel","ContactItem","onClick","item","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","list","length","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8279f9ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2mAk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3LlCL\",\"input\":\"Filter_input__3waUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3YrpZ\",\"button\":\"ContactItem_button__C6MPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1t329\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction(\"contact/delete\");\r\n\r\nconst changeFilter = createAction(\"filter/change\");\r\n\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reducers from \"./phonebook/reducers\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\nconst store = configureStore({\r\n  reducer: { contacts: persistReducer(contactsPersistConfig, reducers) },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import styles from './Container.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n)\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object]).isRequired\r\n};\r\n\r\nexport default Container;","import styles from './Section.module.css'\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object]).isRequired\r\n}\r\n\r\nexport default Section;","import { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/phonebook/actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.contacts.find((el) => el.name === this.state.name)) {\r\n      alert(\"already add\");\r\n      this.reset();\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport action from \"../../redux/phonebook/actions\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filterLabel}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(action.changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styles from './ContactItem.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>{name}: {number}\r\n      <button className={styles.button} type='button' onClick={()=>{onClick(id)}}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ContactItem;","import ContactItem from \"../ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport action from \"../../redux/phonebook/actions\";\r\n\r\nconst ContactList = ({ list, onClick }) => {\r\n  return list.length ? (\r\n    <ul>\r\n      {list.map((item) => (\r\n        <ContactItem\r\n          key={item.id}\r\n          id={item.id}\r\n          onClick={onClick}\r\n          name={item.name}\r\n          number={item.number}\r\n        />\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>No matches found</p>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  list: getVisibleContacts(state.contacts.items, state.contacts.filter),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (id) => dispatch(action.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport { Component } from \"react\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Section title={\"Phonebook\"}>\n          <ContactForm />\n        </Section>\n        <Section title={\"Contacts\"}>\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Hez1\",\"label\":\"ContactForm_label__1HLaV\",\"input\":\"ContactForm_input__2lGpg\",\"button\":\"ContactForm_button__1aYuh\"};"],"sourceRoot":""}